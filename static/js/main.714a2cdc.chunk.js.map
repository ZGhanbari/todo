{"version":3,"sources":["component/Footer.js","component/TodoEntry.js","component/TodoItem.js","component/TodoItems.js","component/Main.js","App.js","serviceWorker.js","index.js"],"names":["Footer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clear","bind","assertThisInitialized","props","react_default","a","createElement","className","count","number","onClick","Component","TodoEntry","state","value","event","keyCode","preventDefault","addTodo","setState","_this2","onKeyDown","keyHandle","onChange","target","type","placeholder","TodoItem","taggle","remove","ontoggle","todo","id","removeTodo","t","complated","title","checked","TodoItems","console","log","todos","map","component_TodoItem","Main","getCount","list","filter","todoList","Id","push","c","component_TodoEntry","component_TodoItems","component_Footer","length","App","component_Main","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.714a2cdc.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'\r\n\r\n class Footer extends Component {\r\nconstructor(){\r\n  super()\r\n  this.clear=this.clear.bind(this)\r\n}\r\nclear(){\r\n  this.props.clear()\r\n}\r\n  \r\n    render() {\r\n      \r\n        return (\r\n<div className=\"footer\">\r\n\r\n        <div className=\"todo-count\"> completed: {this.props.count} </div>\r\n        <div className=\"todo-count\">   total: {this.props.number}</div>\r\n        <div className=\"clear-completed\">\r\n          <button onClick={this.clear}>\r\n            clear completed\r\n          </button>\r\n        </div>\r\n        \r\n</div>\r\n        );\r\n    }\r\n}\r\nexport default Footer","\r\nimport React, { Component } from 'react';\r\n\r\n\r\n class TodoEntry extends Component {\r\n    state = {\r\n        value: ''\r\n    };\r\n    keyHandle(event) {\r\n        if (event.keyCode !== 13) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        this.props.addTodo(this.state.value);\r\n        this.setState({ value: \"\" });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <h1>Todo</h1>\r\n                <input\r\n                    onKeyDown={(event) => this.keyHandle(event)}\r\n                    onChange={\r\n                        event => this.setState({ value: event.target.value })}\r\n                    value={this.state.value}\r\n                    type=\"text\"\r\n                    className=\"new-todo\"\r\n                    placeholder=\"what need to bee done\" />\r\n\r\n            </header>\r\n\r\n        );\r\n    }\r\n}\r\n \r\n\r\nexport default TodoEntry","\r\nimport React, { Component }  from 'react';\r\n\r\n\r\nclass TodoItem extends Component {\r\n  constructor(){\r\n    super()\r\n    this.taggle=this.taggle.bind(this)\r\n    this.remove=this.remove.bind(this)\r\n  }\r\n\r\n  taggle(){\r\n    this.props.ontoggle(this.props.todo.id)\r\n  }\r\n  remove(){\r\n    this.props.removeTodo(this.props.todo.id)\r\n  }\r\n\r\n  render(){ \r\n{\r\n  const t=this.props.todo\r\n  if(t.complated===true)\r\n  return(\r\n    <li className={'completed'}>\r\n        <div className=\"view\">\r\n            <input type=\"checkbox\" className=\"toggle\" \r\n              onClick={this.taggle} \r\n             \r\n            />\r\n      <label >{t.title}</label>\r\n            <button className=\"destroy\"\r\n            onClick={this.remove}\r\n            >\r\n            </button>\r\n\r\n        </div>\r\n    </li>\r\n  )\r\n  else\r\n  return(\r\n    <li className={''}>\r\n        <div className=\"view\">\r\n            <input type=\"checkbox\" className=\"toggle\" \r\n              onClick={this.taggle} \r\n            checked='no'\r\n            />\r\n      <label >{t.title}</label>\r\n            <button className=\"destroy\"\r\n            onClick={this.remove}\r\n            \r\n            >\r\n            </button>\r\n\r\n        </div>\r\n    </li>\r\n  )\r\n }\r\n  }\r\n}\r\n\r\nexport default TodoItem","\r\nimport React, { Component }  from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\n \r\nclass TodoItems extends Component {\r\n  render(){\r\n      console.log(this.props.todos)\r\n      return(\r\n\r\n    <section className=\"main\">\r\n    <ul className=\"todo-list\">\r\n        {\r\n            this.props.todos.map((todo)=>{\r\n        if(todo)\r\nreturn(\r\n    <TodoItem todo={todo}\r\n     ontoggle={this.props.ontoggle}\r\n     removeTodo={this.props.removeTodo}\r\n     />\r\n)\r\n            })\r\n        }\r\n        \r\n\r\n\r\n    </ul>\r\n\r\n</section>\r\n\r\n      )\r\n  }\r\n}\r\n\r\nexport default TodoItems","import React,{Component} from \"react\"\r\nimport Footer from \"./Footer\"\r\nimport TodoEntry from \"./TodoEntry\"\r\nimport TodoItems from \"./TodoItems\"\r\n\r\n\r\nclass Main extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            todos:[]\r\n            ,id:0\r\n            ,count:0\r\n        }\r\n        this.ontoggle=this.ontoggle.bind(this)\r\n        this.removeTodo=this.removeTodo.bind(this)\r\n        this.addTodo=this.addTodo.bind(this)\r\n        this.getCount=this.getCount.bind(this)\r\n        this.clear=this.clear.bind(this)\r\n    }\r\n    clear(){\r\n        const list=this.state.todos.filter(todo=>!(todo.complated))\r\n        const id=this.state.id\r\n        const count=this.state.count\r\n    \r\n         this.setState(\r\n             {\r\n                 todos:this.state.todos=list,\r\n                 id:id,\r\n                 count:count\r\n                 \r\n             }\r\n         )\r\n         this.getCount()\r\n\r\n    }\r\n    ontoggle(id){\r\n    \r\n        const todoList=this.state.todos.map((todo)=>{\r\n            if(todo.id===id){\r\n                todo.complated=!todo.complated\r\n            }\r\n        })\r\n        this.setState(\r\n            (state)=>({\r\n                todos:todoList\r\n                ,id:state.id,\r\n                count:state.count\r\n            })\r\n        )\r\n        this.getCount()\r\n    }\r\n    removeTodo(Id){\r\n        \r\n        const list= this.state.todos.filter((todo)=>(\r\n        (todo.id)!=Id))\r\n       const id=this.state.id\r\n       const count=this.state.count\r\n   \r\n        this.setState(\r\n            {\r\n                todos:this.state.todos=list,\r\n                id:id,\r\n                count:count\r\n                \r\n            }\r\n        )\r\n        this.getCount()\r\n    }\r\n    addTodo(title){\r\n       \r\n      const  Id=this.state.id\r\n      const  todo={\r\n            id:Id ,\r\n            title:title,\r\n            complated:false\r\n        }\r\n        const list= this.state.todos\r\n        this.setState(\r\n            (state)=>({\r\n                todos:list.push(todo),\r\n                id:Id+1,\r\n                count:state.count\r\n            })\r\n        )\r\n        this.getCount()\r\n    }\r\n    getCount(){\r\n        \r\n        var c=0\r\n       const list= this.state.todos\r\n       list.map((todo)=>{\r\n        if(todo.complated){\r\n           c++\r\n        }\r\n    })\r\n        this.setState(\r\n            (state)=>({\r\n                todos:list,\r\n                id:state.id,\r\n                count:c\r\n            })\r\n        )\r\n    }\r\n    render(){\r\n        \r\n        return <div>\r\n            <TodoEntry addTodo={this.addTodo}/>\r\n            <TodoItems todos={this.state.todos}\r\n             ontoggle={this.ontoggle}\r\n             removeTodo={this.removeTodo}\r\n             />\r\n            <Footer count={this.state.count} number={this.state.todos.length} clear={this.clear}/>\r\n        </div>\r\n    }\r\n}\r\nexport default Main","import React, {Component} from 'react';\nimport Main from \"./component/Main\"\n\nclass App extends Component {\n    render() {\n        return [\n            <div className=\"todoapp\">\n                <Main/>\n            </div>,\n            <footer className=\"info\">\n                <p>Written by <a href=\"https://www.linkedin.com/in/zahra-ghanbari-b768261b5/\">Zahra Ghanbari</a></p>\n            </footer>\n        ]\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}